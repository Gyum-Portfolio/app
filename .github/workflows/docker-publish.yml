name: Build & Publish Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

permissions:
  contents: read       
  packages: write      
  id-token: write      

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. get the version from the tag
      - name: Extract and Parse version info from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          MAJOR=$(echo "$VERSION" | cut -d. -f1)
          MINOR=$(echo "$VERSION" | cut -d. -f2)
          PATCH=$(echo "$VERSION" | cut -d. -f3)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      # 4. build and push Docker image
      - name: Build and push app-frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app-frontend
          file: ./app-frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/app-frontend:${{ env.version_major }}.${{ env.version_minor }}.${{ env.version_patch }}
            ghcr.io/${{ github.repository }}/app-frontend:latest
      
      - name: Build and push app-service Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./app-service
          file: ./app-service/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/app-service:${{ env.version_major }}.${{ env.version_minor }}.${{ env.version_patch }}
            ghcr.io/${{ github.repository }}/app-service:latest
